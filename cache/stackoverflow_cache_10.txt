-this is all very simple stuff - - i suggest you read some c + + tutorials and books aimed at beginners .declare them as extern " c " to avoid this :they're likely being mangled by your c + + compiler .)( edit :good luck !long answer :short answer :emcc - g hello . c - o hello . html .use the - g flag when compiling to enable debugging information :the emscripten website has an entire page on debugging that you should read .failing that , you can always glean what information you can with printf debugging .my current project doesn't work under asm . js , which makes debugging interesting .it seems that the latest version of browsers are improving on the wasm debugging front .first off , set emcc_debug = 1 outputs debug information about the intermediate code that emcc generates .( if you are going through a vtbl , you tend to just get a trace from the member function to the dispatcher , which usually isn't super useful ) .if you're using plain old c , or not using virtual functions , you might be able to get decent information with em_asm ( console . trace ( ) ; ) ;you can't debug the c / c + + portions of code with a native debugger while it runs in a web browser , you'll have to debug your code in some other fashion .the easiest way of debugging wasm code is to debug it as a native build - - if the issue isn't emscripten specific , this is going to be the simplest method .if your project can run in asm . js , you should be able to use - g4 ' s source map technology , which should allow you to use the browser's js debugger to debug your code .sadly , when compiling to webassembly ( the default ) , - g doesn't really gain you that much ( as far as i can tell ) , as the javascript portion is calling into webassembly , which still seems pretty much a blackbox regardless .
